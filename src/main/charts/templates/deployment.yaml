{{- if .Values.k8s.deployment.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.name" . }}
  labels:
    {{ include "base.metadataLabels" . | nindent 4 }}
  annotations:
    {{ include "base.metadataAnnotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "base.name" . }}
      fullapp: {{ template "base.fullapp" .}}
  replicas: {{ .Values.k8s.deployment.replicaCount }}
  strategy:
    type: {{ .Values.k8s.deployment.strategy.type }}
    {{ if eq .Values.k8s.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.k8s.deployment.strategy.maxSurge }}
      maxUnavailable: {{ .Values.k8s.deployment.strategy.maxUnavailable }}
    {{ end }}
  template:
    metadata:
      annotations:
        {{ if .Values.k8s.deployment.podAnnotations }}
          {{- toYaml .Values.k8s.deployment.podAnnotations | nindent 8}}
          {{ end }}
      labels:
        app: {{ template "base.name" . }}
        fullapp: {{ template "base.fullapp" .}}
        release: {{ .Release.Name }}
        tier: backend
    spec:
  {{- if .Values.k8s.deployment.priorityClassName }}
priorityClassName: "{{ .Values.pushgateway.priorityClassName }}"
  {{- end }}
  {{- if .Values.imagePullSecrets }}
imagePullSecrets:
  {{ toYaml .Values.imagePullSecrets | indent 2 }}
  {{- end }}
  {{- if .Values.k8s.deployment.nodeSelector }}
nodeSelector:
  {{ toYaml .Values.k8s.deployment.nodeSelector | indent 8 }}
  {{- end }}
  {{- if .Values.k8s.deployment.securityContext }}
securityContext:
  {{ toYaml .Values.k8s.deployment.securityContext | indent 8 }}
  {{- end }}
  {{- if .Values.k8s.deployment.tolerations }}
tolerations:
  {{ toYaml .Values.k8s.deployment.tolerations | indent 8 }}
  {{- end }}
affinity:
  {{- if .Values.k8s.deployment.nodeAffinity.enabled }}
nodeAffinity:
  {{- if .Values.k8s.deployment.nodeAffinity.preferredKey }}
preferredDuringSchedulingIgnoredDuringExecution:
  - preference:
      matchExpressions:
        - key: {{ .Values.k8s.deployment.nodeAffinity.preferredKey }}
          operator: In
          values:
          {{- range $record := .Values.k8s.deployment.nodeAffinity.preferredValues }}
          - {{ $record | quote }}
          {{- end }}
    {{- if .Values.k8s.deployment.nodeAffinity.extraPreferredKeys }}
    {{- toYaml .Values.k8s.deployment.nodeAffinity.extraPreferredKeys | nindent 14 -}}
    {{- end}}
    weight: 100
  {{- end }}
  {{- if .Values.k8s.deployment.nodeAffinity.requiredKeys }}
requiredDuringSchedulingIgnoredDuringExecution:
  nodeSelectorTerms:
    - matchExpressions:
      {{- toYaml .Values.k8s.deployment.nodeAffinity.requiredKeys | nindent 14 }}
  {{- end }}
  {{- end }}
podAntiAffinity:
  preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - {{ template "base.name" . }}
        topologyKey: kubernetes.io/hostname
      weight: 100
  {{- if .Values.k8s.deployment.affinity }}
  {{  toYaml .Values.k8s.deployment.affinity | nindent 8 }}
  {{- end }}
  {{- if .Values.k8s.deployment.hostAliases }}
hostAliases:
  {{- toYaml .Values.k8s.deployment.hostAliases | nindent 6 }}
  {{- end }}
volumes:
  - name: app-config
    configMap:
      name: {{ template "base.name" . }}-config
  {{- if .Values.k8s.persistentVolume.enabled }}
  - name: storage-volume
persistentVolumeClaim:
  claimName: {{ if .Values.k8s.persistentVolume.existingClaim }}{{ .Values.k8s.persistentVolume.existingClaim }}{{ else }}{{ template "base.name" . }}{{- end }}
  {{- end }}
  {{ range $secret := .Values.k8s.secrets }}
  {{- if $secret.mountPath }}
- name: "{{ $secret.name }}"
  secret:
    secretName: "{{ $secret.name }}"
    {{- if $secret.defaultMode }}
    defaultMode: {{ $secret.defaultMode }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{ range $secret, $value := .Values.k8s.secretFiles }}
  {{- if $value.mountPath }}
- name: "{{ $secret }}"
  secret:
    secretName: "{{ $secret }}"
    {{- if $value.defaultMode }}
    defaultMode: {{ $value.defaultMode }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{ range $secret := .Values.k8s.deployment.externalSecrets }}
  {{- if $secret.mountPath }}
- name: {{ $secret.name }}
  secret:
    secretName: {{ $secret.name }}
  {{- end }}
  {{- end }}
containers:
  - name: "{{ template "base.name" . }}"
    image: "{{ .Values.k8s.deployment.image.repository }}:{{ .Values.k8s.deployment.image.tag }}"
  {{- if .Values.k8s.deployment.lifecycle }}
  lifecycle:
    {{ toYaml .Values.k8s.deployment.lifecycle | nindent 12 }}
  {{- end }}
  imagePullPolicy: {{ .Values.k8s.deployment.image.pullPolicy }}
  {{- if .Values.k8s.deployment.command }}
  command:
  {{ toYaml .Values.k8s.deployment.command | nindent 10 }}
  {{- end }}
  {{- if .Values.k8s.deployment.args }}
  args:
  {{ toYaml .Values.k8s.deployment.args | nindent 10 }}
  {{- end }}
  env:
    - name: {{ .Values.config.envvar }}
      value: {{ .Values.config.configPath }}
  {{- if .Values.k8s.deployment.environment.extraVars }}
  {{ toYaml .Values.k8s.deployment.environment.extraVars | nindent 10 }}
  {{- end }}
  {{- if .Values.k8s.deployment.environment.extraVarsObject }}
  {{- range $key, $var := .Values.k8s.deployment.environment.extraVarsObject  }}
  - name: {{ $key }}
    {{- toYaml $var | nindent 12 }}
  {{- end }}
  {{- end }}
  {{- if .Values.k8s.deployment.environment.renderVars }}
  {{- range $var := .Values.k8s.deployment.environment.renderVars  }}
  - name: {{ tpl $var.name $ }}
    value: {{ tpl $var.value $ }}
  {{- end }}
  {{- end }}
  ports:
    - containerPort: {{ .Values.k8s.service.internalPort }}
      name: {{ .Values.k8s.service.name | trunc 15 | trimSuffix "-" }}
      protocol: {{ .Values.k8s.service.protocol }}
    {{ range $port := .Values.k8s.service.extraPorts }}
    - containerPort: {{ $port.internalPort }}
      name: {{ $port.name | trunc 15 | trimSuffix "-"}}
      protocol: {{ $port.protocol }}
    {{ end }}
    {{ range $port := .Values.k8s.deployment.extraPorts }}
    - containerPort: {{ $port.port }}
      name: {{ $port.name | trunc 15 | trimSuffix "-"}}
      protocol: {{ $port.protocol }}
    {{ end }}
  {{- if .Values.k8s.deployment.securityContextContainer }}
  securityContext:
  {{ toYaml .Values.k8s.deployment.securityContextContainer | nindent 12 }}
  {{- end }}
  {{- if .Values.k8s.deployment.enableLiveness }}
  livenessProbe:
  {{ toYaml .Values.k8s.deployment.livenessProbe | nindent 12 }}
  {{- end }}
  {{- if .Values.k8s.deployment.enableReadiness  }}
  readinessProbe:
  {{ toYaml .Values.k8s.deployment.readinessProbe | nindent 12 }}
  {{- end }}
  volumeMounts:
    - name: app-config
      mountPath: {{ .Values.config.configPath }}
  {{- if .Values.k8s.persistentVolume.enabled }}
  - name: storage-volume
    mountPath: "{{ .Values.k8s.persistentVolume.mountPath }}"
    {{- if .Values.k8s.persistentVolume.subPath }}
    subPath: "{{ .Values.k8s.persistentVolume.subPath }}"
    {{- end }}
  {{- end }}
  {{- range $secret := .Values.k8s.secrets }}
  {{- if $secret.mountPath }}
  - name: "{{ $secret.name}}"
    mountPath: "{{ $secret.mountPath }}"
    {{- if $secret.subPath }}
    subPath: "{{ $secret.subPath }}"
    {{- end }}
    {{- if $secret.readOnly }}
    readOnly: "{{ $secret.readOnly }}"
    {{- end }}
  {{- end }}
  {{- end }}
  {{- range $secret, $value := .Values.k8s.secretFiles }}
  {{- if $value.mountPath }}
  - name: "{{ $secret }}"
    mountPath: "{{ $value.mountPath }}"
    {{- if $value.subPath }}
    subPath: "{{ $value.subPath }}"
    {{- end }}
    {{- if $value.readOnly }}
    readOnly: "{{ $value.readOnly }}"
    {{- end }}
  {{- end }}
  {{- end }}
  {{- range $secret := .Values.k8s.deployment.externalSecrets }}
  {{- if $secret.mountPath }}
  - name: "{{ $secret.name}}"
    mountPath: "{{ $secret.mountPath }}"
    {{- if $secret.subPath }}
    subPath: "{{ $secret.subPath }}"
    {{- end }}
    readOnly: true
  {{- end }}
  {{- end }}
  resources:
    {{ toYaml .Values.k8s.deployment.resources | nindent 12 }}
  {{- if or (ne .Values.k8s.deployment.serviceAccount.name "") (.Values.k8s.deployment.serviceAccount.create) }}
serviceAccount: "{{ template "serviceaccount.name" . }}"
serviceAccountName: "{{ template "serviceaccount.name" . }}"
  {{- end }}
  {{- if .Values.nodeSelector }}
nodeSelector:
  {{ toYaml .Values.nodeSelector | nindent 8 }}
  {{- end }}
  {{- end -}}